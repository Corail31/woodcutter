plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '2.7.0'
group = 'ovh.corail'
archivesBaseName = 'corail_woodcutter'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.19.4'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                corail_woodcutter {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                corail_woodcutter {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir { dirs 'modlib' }
    maven { url = "https://modmaven.dev" } // JEI
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.0.6'
    //runtimeOnly fg.deobf("mezz.jei:jei-1.19.3-common:12.1.1.13")
    // runtimeOnly fg.deobf("mezz.jei:jei-1.19.3-forge:12.1.1.13")
    compileOnly fg.deobf("mezz.jei:jei-1.19.3-common-api:12.1.1.13")
    compileOnly fg.deobf("mezz.jei:jei-1.19.3-forge-api:12.1.1.13")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "corail_woodcutter",
                "Specification-Vendor"    : "Corail31",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "corail_woodcutter",
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Corail31",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
